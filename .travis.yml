language: python

python:
  - 3.6

addons:
  apt:
    packages:
    - gcc
    - gfortran
    - libblas-dev
    - liblapack-dev

env:
  global:
    - DEPLOY_DIR=tests/docs
    - MASTER_BRANCH=master
    - GAE_PROJECT=simpegdocs
    - DOCS_PY=3.6  # deploy docs from 3.6
    - PYPI_PY=3.6  # deploy to pypi from python 3.6

  matrix:
    - TEST_DIR=tests/docs
    - TEST_DIR=tests/em/fdem/inverse/derivs
    - TEST_DIR=tests/em/tdem
    - TEST_DIR="tests/em/static tests/seis tests/base tests/utils"
    - TEST_DIR=tests/flow
    - TEST_DIR="tests/em/nsem/forward tests/em/nsem/inversion"
    - TEST_DIR=tests/em/fdem/inverse/adjoint
    - TEST_DIR=tests/em/fdem/forward
    - TEST_DIR=tests/em/vrm
    - TEST_DIR=tests/pf
    - TEST_DIR=tests/dask


# Setup anaconda
before_install:
# Install packages
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
  - chmod +x miniconda.sh
  - ./miniconda.sh -b -p $HOME/miniconda
  - export PATH=/home/travis/anaconda/bin:/home/travis/miniconda/bin:$PATH
  - conda update --yes conda

install:
  - conda install --quiet --yes pip python=$TRAVIS_PYTHON_VERSION numpy scipy matplotlib ipython h5py;
  - conda install --quiet --yes -c conda-forge pymatsolver discretize empymod geoana properties vectormath pandas
  - pip install -r requirements_dev.txt
  - if [ "$TEST_DIR" = "tests/dask" ]; then
      pip install -r requirements_dask.txt;
    fi
  - python setup.py install
  - if [ "$TEST_DIR" = "tests/docs" ]; then
      cd docs/content;
      wget https://storage.googleapis.com/simpeg/simulation/$TRAVIS_PYTHON_VERSION/examples.tar.gz;
      wget https://storage.googleapis.com/simpeg/simulation/$TRAVIS_PYTHON_VERSION/tutorials.tar.gz;
      tar -xzf examples.tar.gz examples;
      tar -xzf tutorials.tar.gz tutorials;
      cd ../../;
    fi

# Run test
script:
  - nosetests $TEST_DIR --with-cov --cov SimPEG --cov-config .coveragerc -v -s;


# Calculate coverage
after_success:
  - bash <(curl -s https://codecov.io/bash)

  # deploy docs
  - if [[("$TRAVIS_BRANCH" == "$MASTER_BRANCH") && ("$TRAVIS_PULL_REQUEST" == "false") && ("$TEST_DIR" == "tests/docs")]]; then
      export PATH=$PATH:${HOME}/google-cloud-sdk/bin;
      export PYTHONPATH=${PYTHONPATH}:${GAE_PYTHONPATH};
      export CLOUDSDK_CORE_DISABLE_PROMPTS=1;
      if [ ! -d ${HOME}/google-cloud-sdk ]; then curl https://sdk.cloud.google.com | bash; fi ;
      pip install google-compute-engine;
      openssl aes-256-cbc -K $encrypted_7e0a8632ac3f_key -iv $encrypted_7e0a8632ac3f_iv -in credentials.tar.gz.enc -out credentials.tar.gz -d ;
      tar -xzf credentials.tar.gz ;
      cd docs; tar -cvzf _build.tar.gz _build ; cd ..;
      gsutil cp docs/_build.tar.gz gs://simpeg ;
      gcloud auth activate-service-account --key-file credentials/client-secret.json ;
      export GAE_PROJECT=$GAE_PROJECT ;
      gcloud config set project $GAE_PROJECT;
      gcloud app deploy ./docs/app.yaml --version ${TRAVIS_COMMIT} --promote;
    fi;

deploy:
  # pypi release
  - provider: script
    script: sh ci/deploy-pypi.sh
    skip_cleanup: true
    on:
      tags: true
      condition: '$TEST_DIR == $DEPLOY_DIR'

notifications:
  slack: simpeg:1KZq5giMtlJJ58TijIPgqf7n
